/*!
 * ASP.NET SignalR JavaScript Library v2.1.0-pre
 * http://signalr.net/
 *
 * Copyright Microsoft Open Technologies, Inc. All rights reserved.
 * Licensed under the Apache 2.0
 * https://github.com/SignalR/SignalR/blob/master/LICENSE.md
 *
 */
(function(n){"use strict";function r(t,i){return function(){i.apply(t,n.makeArray(arguments))}}function i(t,i){var e,u,f,o,s;for(e in t)if(t.hasOwnProperty(e)){if(u=t[e],!u.hubName)continue;s=i?u.on:u.off;for(f in u.client)if(u.client.hasOwnProperty(f)){if(o=u.client[f],!n.isFunction(o))continue;s.call(u,f,r(u,o))}}}if(typeof n.signalR!="function")throw new Error("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.");var t=n.signalR;n.hubConnection.prototype.createHubProxies=function(){var t={};return this.starting(function(){i(t,!0);this._registerSubscribedHubs()}).disconnected(function(){i(t,!1)}),t.chat=this.createHubProxy("chat"),t.chat.client={},t.chat.server={getCommands:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetCommands"],n.makeArray(arguments)))},getPreviousMessages:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetPreviousMessages"],n.makeArray(arguments)))},getRoomInfo:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetRoomInfo"],n.makeArray(arguments)))},getRooms:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetRooms"],n.makeArray(arguments)))},getShortcuts:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetShortcuts"],n.makeArray(arguments)))},getUserInfo:function(){return t.chat.invoke.apply(t.chat,n.merge(["GetUserInfo"],n.makeArray(arguments)))},join:function(){return t.chat.invoke.apply(t.chat,n.merge(["Join"],n.makeArray(arguments)))},loadRooms:function(){return t.chat.invoke.apply(t.chat,n.merge(["LoadRooms"],n.makeArray(arguments)))},postNotification:function(){return t.chat.invoke.apply(t.chat,n.merge(["PostNotification"],n.makeArray(arguments)))},send:function(){return t.chat.invoke.apply(t.chat,n.merge(["Send"],n.makeArray(arguments)))},tabOrderChanged:function(){return t.chat.invoke.apply(t.chat,n.merge(["TabOrderChanged"],n.makeArray(arguments)))},typing:function(){return t.chat.invoke.apply(t.chat,n.merge(["Typing"],n.makeArray(arguments)))},updateActivity:function(){return t.chat.invoke.apply(t.chat,n.merge(["UpdateActivity"],n.makeArray(arguments)))}},t.monitor=this.createHubProxy("monitor"),t.monitor.client={},t.monitor.server={},t};t.hub=n.hubConnection("/signalr",{useDefaultPath:!1});n.extend(t,t.hub.createHubProxies())})(window.jQuery,window)